// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package aptostypes

import (
	"encoding/json"
)

var _ = (*restErrorMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (r RestError) MarshalJSON() ([]byte, error) {
	type RestError struct {
		Code               int        `json:"code"`
		Message            string     `json:"message"`
		AptosLedgerVersion jsonUint64 `json:"aptos_ledger_version"`
	}
	var enc RestError
	enc.Code = r.Code
	enc.Message = r.Message
	enc.AptosLedgerVersion = jsonUint64(r.AptosLedgerVersion)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (r *RestError) UnmarshalJSON(input []byte) error {
	type RestError struct {
		Code               *int        `json:"code"`
		Message            *string     `json:"message"`
		AptosLedgerVersion *jsonUint64 `json:"aptos_ledger_version"`
	}
	var dec RestError
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Code != nil {
		r.Code = *dec.Code
	}
	if dec.Message != nil {
		r.Message = *dec.Message
	}
	if dec.AptosLedgerVersion != nil {
		r.AptosLedgerVersion = uint64(*dec.AptosLedgerVersion)
	}
	return nil
}
